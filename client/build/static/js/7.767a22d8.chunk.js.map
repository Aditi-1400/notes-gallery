{"version":3,"sources":["pages/Login/activate.js","helpers/auth.js"],"names":["Activate","match","history","useState","name","token","show","formData","setFormData","useEffect","params","jwt","decode","className","onSubmit","e","preventDefault","axios","post","process","then","res","toast","success","data","message","push","catch","err","error","response","errors","type","value","removeCookie","key","window","cookie","remove","expires","removeLocalStorage","localStorage","removeItem","authenticate","next","console","log","set","setItem","JSON","stringify","setLocalStorage","user","isAuth","get","getCookie","getItem","parse"],"mappings":"yaAwEeA,UAhEE,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAAc,EACPC,mBAAS,CACvCC,KAAM,GACNC,MAAO,GACPC,MAAM,IAJ+B,mBAChCC,EADgC,KACtBC,EADsB,KAOvCC,qBAAU,WAGR,IAAIJ,EAAQJ,EAAMS,OAAOL,MACnBD,EAASO,IAAIC,OAAOP,GAApBD,KAEFC,GACFG,EAAY,2BAAKD,GAAN,IAAgBH,OAAMC,aAIlC,CAACJ,EAAMS,SAlB6B,IAmB/BN,EAAeG,EAAfH,KAAMC,EAASE,EAATF,MAuBd,OACE,gCAGI,cAAC,IAAD,IACA,qBAAKQ,UAAU,aAAf,SACA,qBAAKA,UAAU,WAAf,SACA,uBAAMC,SA5BS,SAAAC,GAEnBA,EAAEC,iBAEFC,IACGC,KADH,UACWC,wBADX,mBAC+D,CAC3Dd,UAEDe,MAAK,SAAAC,GACJb,EAAY,2BACPD,GADM,IAETD,MAAM,KAGRgB,IAAMC,QAAQF,EAAIG,KAAKC,SACvBvB,EAAQwB,KAAK,aAEdC,OAAM,SAAAC,GACLN,IAAMO,MAAMD,EAAIE,SAASN,KAAKO,YAU9B,UACK,0CAAa3B,KACb,uBAAO4B,KAAK,SAASnB,UAAU,cAAcT,KAAK,wBAAwB6B,MAAM,0BAChF,iDACA,uBAAOD,KAAK,SAASnB,UAAU,cAAcT,KAAK,UAAU6B,MAAM,wB,gCC7D/E,6JAaaC,EAAe,SAAAC,GACT,cAAXC,QACAC,IAAOC,OAAOH,EAAK,CACfI,QAAS,KAwBRC,EAAqB,SAAAL,GACf,cAAXC,QACAK,aAAaC,WAAWP,IAKnBQ,EAAe,SAACb,EAAUc,GA5Cd,IAACT,EAAKF,EA6C3BY,QAAQC,IAAI,yCAA0ChB,GA7ChCK,EA8CZ,QA9CiBF,EA8CRH,EAASN,KAAKnB,MA7ClB,cAAX+B,QACAC,IAAOU,IAAIZ,EAAKF,EAAO,CAEnBM,QAAS,IA0BU,SAACJ,EAAKF,GAClB,cAAXG,QACAK,aAAaO,QAAQb,EAAKc,KAAKC,UAAUjB,IAe7CkB,CAAgB,OAAQrB,EAASN,KAAK4B,MACtCR,KAISS,EAAS,WAClB,GAAe,cAAXjB,QA9BiB,SAAAD,GACrB,GAAe,cAAXC,OACA,OAAOC,IAAOiB,IAAInB,GA6BIoB,CAAU,SAE5B,QAAId,aAAae,QAAQ,SACdP,KAAKQ,MAAMhB,aAAae,QAAQ","file":"static/js/7.767a22d8.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport axios from 'axios';\nimport jwt from 'jsonwebtoken';\nimport {  isAuth } from '../../helpers/auth';\nimport { Redirect } from 'react-router-dom';\n\n\nconst Activate = ({ match, history }) => {\n  const [formData, setFormData] = useState({\n    name: '',\n    token: '',\n    show: true\n  });\n\n  useEffect(() => {\n\n    /*get token from params */\n    let token = match.params.token;\n    let { name } = jwt.decode(token);\n   \n    if (token) {\n      setFormData({ ...formData, name, token });\n    }\n\n  \n  }, [match.params]);\n  const { name, token} = formData;\n\n  const handleSubmit = e => {\n    \n    e.preventDefault();\n\n    axios\n      .post(`${process.env.REACT_APP_BACKEND_URL}/api/activation`, {\n        token\n      })\n      .then(res => {\n        setFormData({\n          ...formData,\n          show: false\n        });\n     \n        toast.success(res.data.message);\n        history.push('/login');\n      })\n      .catch(err => {\n        toast.error(err.response.data.errors);\n      });\n  };\n  return ( \n    <div>\n   \n\n        <ToastContainer/>\n        <div className=\"Signup box\">\n        <div className=\"activate\">\n        <form onSubmit={handleSubmit}>\n             <h2>Welcome {name}</h2>\n             <input type=\"submit\" className=\"loginSubmit\" name=\"Activate your Account\" value=\"Activate your Account\" />\n             <p>Or sign up again</p>\n             <input type=\"submit\" className=\"loginSubmit\" name=\"Sign Up\" value=\"Sign Up\" />\n        </form>\n        </div>\n        </div>\n        \n\n        </div>\n );\n\n};\n\nexport default Activate;","import cookie from 'js-cookie';\n\n// Set in Cookie\nexport const setCookie = (key, value) => {\n    if (window !== 'undefined') {\n        cookie.set(key, value, {\n            // 1 Day\n            expires: 1\n        }) \n    }\n}\n\n// remove from cookie\nexport const removeCookie = key => {\n    if (window !== 'undefined') {\n        cookie.remove(key, {\n            expires: 1\n        });\n    }\n};\n\n\n//Get from cookie like token\n\n// Get from cookie such as stored token\n// Will be useful when we need to make request to server with token\nexport const getCookie = key => {\n    if (window !== 'undefined') {\n        return cookie.get(key);\n    }\n};\n\n// Set in localstorage\nexport const setLocalStorage = (key, value) => {\n    if (window !== 'undefined') {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n};\n\n// Remove from localstorage\nexport const removeLocalStorage = key => {\n    if (window !== 'undefined') {\n        localStorage.removeItem(key);\n    }\n};\n\n// Authenticate user by passing data to cookie and localstorage during signin\nexport const authenticate = (response, next) => {\n    console.log('AUTHENTICATE HELPER ON SIGNIN RESPONSE', response);\n    setCookie('token', response.data.token);\n    setLocalStorage('user', response.data.user);\n    next();\n};\n\n// Access user info from localstorage\nexport const isAuth = () => {\n    if (window !== 'undefined') {\n        const cookieChecked = getCookie('token');\n        if (cookieChecked) {\n            if (localStorage.getItem('user')) {\n                return JSON.parse(localStorage.getItem('user'));\n            } else {\n                return false;\n            }\n        }\n    }\n};\n\nexport const signout = next => {\n    removeCookie('token');\n    removeLocalStorage('user');\n   \n};\n\n//update user data in local storage\nexport const updateUser = (response, next) => {\n    console.log('UPDATE USER IN LOCALSTORAGE HELPERS', response);\n    if (typeof window !== 'undefined') {\n        let auth = JSON.parse(localStorage.getItem('user'));\n        auth = response.data;\n        localStorage.setItem('user', JSON.stringify(auth));\n    }\n    next();\n};"],"sourceRoot":""}